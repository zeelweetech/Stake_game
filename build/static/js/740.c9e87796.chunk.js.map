{"version":3,"file":"static/js/740.c9e87796.chunk.js","mappings":"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","sources":["services/GameServices.js","socket.js","views/casino/CasinoHomePage/Exclusives.js","views/casino/CasinoHomePage/GameShows.js","views/casino/CasinoHomePage/LiveCasino.js","views/casino/CasinoHomePage/Slots.js","views/casino/CasinoHomePage/StackOriginals.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport async function getAllGames() {\r\n  try {\r\n    const response = await axios.get(\r\n      `${process.env.REACT_APP_LOCAL_URL}/game/get`,\r\n      {\r\n        headers: {\r\n          Authorization: localStorage.getItem(\"token\"),\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n","import { io } from \"socket.io-client\";\r\n\r\n// const ChatURL = \"http://192.168.29.203:3002\";\r\n// const CrashURL = \"http://192.168.29.203:3003\";\r\n// const PlinkoURL = \"http://192.168.29.203:3004\";\r\n// const MineURL = \"http://192.168.29.203:3005\";\r\n// const WheelURL = \"http://192.168.29.203:3006\";\r\n// const LimboURL = \"http://192.168.29.203:3007\";\r\n// const DragonTowerURL = \"http://192.168.29.203:3008\";\r\n\r\nconst token = localStorage.getItem(\"token\");\r\n\r\n// export const ChatSocket = io(ChatURL, {\r\n//   path: \"/ws\",\r\n//   extraHeaders: {\r\n//     Authorization: `token: ${token}`,\r\n//   },\r\n// });\r\n\r\nexport const CrashSocket = io(process.env.REACT_APP_CRASH_URL, {\r\n  path: \"/ws\",\r\n  extraHeaders: {\r\n    Authorization: `token: ${token}`,\r\n  },\r\n});\r\n\r\nexport const PlinkoSocket = io(process.env.REACT_APP_PLINKO_URL, {\r\n  path: \"/ws\",\r\n  extraHeaders: {\r\n    Authorization: `token: ${token}`,\r\n  },\r\n});\r\n\r\nexport const MineSocket = io(process.env.REACT_APP_MINE_URL, {\r\n  path: \"/ws\",\r\n  extraHeaders: {\r\n    Authorization: `token: ${token}`,\r\n  },\r\n});\r\n\r\nexport const WheelSocket = io(process.env.REACT_APP_WHEEL_URL, {\r\n  path: \"/ws\",\r\n  extraHeaders: {\r\n    Authorization: `token: ${token}`,\r\n  },\r\n});\r\n\r\nexport const LimboSocket = io(process.env.REACT_APP_LIMBO_URL, {\r\n  path: \"/ws\",\r\n  extraHeaders: {\r\n    Authorization: `token: ${token}`,\r\n  },\r\n});\r\n\r\nexport const DragonTowerSocket = io(process.env.REACT_APP_DRAGONTOWER_URL, {\r\n  path: \"/ws\",\r\n  extraHeaders: {\r\n    Authorization: `token: ${token}`,\r\n  },\r\n});\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { BsBookmarkStarFill } from \"react-icons/bs\";\r\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { Box, Divider } from \"@mui/material\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Navigation } from \"swiper/modules\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\n\r\nfunction Exclusives({ allGames, isLobby }) {\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const swiperRef = useRef(null);\r\n  const navButtonsRef = useRef(null);\r\n\r\n  const handleAllGame = (gameName, id) => {\r\n    setLoading(true);\r\n    navigate(`/casino/${gameName}/${id}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (swiperRef.current && swiperRef.current.swiper) {\r\n      const prevButton = navButtonsRef.current.querySelector(\".prev-arrow\");\r\n      const nextButton = navButtonsRef.current.querySelector(\".next-arrow\");\r\n      swiperRef.current.swiper.params.navigation.prevEl = prevButton;\r\n      swiperRef.current.swiper.params.navigation.nextEl = nextButton;\r\n      swiperRef.current.swiper.navigation.init();\r\n      swiperRef.current.swiper.navigation.update();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-between items-center\">\r\n        <div className=\"flex items-center mx-3 mt-8 space-x-2\">\r\n          <BsBookmarkStarFill\r\n            fontSize=\"small\"\r\n            className=\"text-[#b1bad3] hover:text-white\"\r\n          />\r\n          <Link className=\"text-lg font-medium\">Listor Exclusives</Link>\r\n        </div>\r\n        {isLobby && (\r\n          <div ref={navButtonsRef}>\r\n            <Box\r\n              sx={{\r\n                display: \"inline-flex\",\r\n                alignItems: \"center\",\r\n                border: \"1px solid\",\r\n                borderColor: \"#b1bad3\",\r\n                borderRadius: 2,\r\n                bgcolor: \"#1a2c38\",\r\n                color: \"#b1bad3\",\r\n                \"& svg\": {\r\n                  m: 1,\r\n                },\r\n              }}\r\n            >\r\n              <ArrowBackIosIcon\r\n                fontSize=\"small\"\r\n                className=\"cursor-pointer prev-arrow\"\r\n              />\r\n              <Divider\r\n                orientation=\"vertical\"\r\n                variant=\"middle\"\r\n                flexItem\r\n                sx={{ borderColor: \"#b1bad3\" }}\r\n              />\r\n              <ArrowForwardIosIcon\r\n                fontSize=\"small\"\r\n                className=\"cursor-pointer next-arrow\"\r\n              />\r\n            </Box>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\" ml-2 mr-2 relative mt-3\">\r\n        {isLobby ? (\r\n          <Swiper\r\n            slidesPerView={6}\r\n            slidesPerGroup={6}\r\n            navigation\r\n            modules={[Navigation]}\r\n            ref={swiperRef}\r\n            spaceBetween={15}  \r\n            breakpoints={{\r\n              320: {\r\n                slidesPerView: 3,\r\n                slidesPerGroup: 3,\r\n              },\r\n              375: {\r\n                slidesPerView: 3,\r\n                slidesPerGroup: 3,\r\n              },\r\n              425: {\r\n                slidesPerView: 3,\r\n                slidesPerGroup: 3,\r\n              },\r\n              640: {\r\n                slidesPerView: 2,\r\n                slidesPerGroup: 2,\r\n              },\r\n              768: {\r\n                slidesPerView: 4,\r\n                slidesPerGroup: 4,\r\n              },\r\n              1024: {\r\n                slidesPerView: 6,\r\n                slidesPerGroup: 6,\r\n              },\r\n            }}\r\n          >\r\n            {allGames?.games?.map((exclusives, index) =>\r\n              exclusives?.gameType === \"StackExclusives\" ? (\r\n                <SwiperSlide key={index}>\r\n                  <div className=\"text-center\">\r\n                    <img\r\n                      src={exclusives.gameImage}\r\n                      className=\"xl:w-44 lg:w-36 lg:h-48 xl:h-56 rounded-md hover:cursor-pointer transition-transform duration-300 hover:translate-y-[-10px]\"\r\n                      alt={exclusives?.gameName || \"Game Image\"} \r\n                      onClick={() => handleAllGame(exclusives?.gameName, exclusives?.id)}\r\n                    />\r\n                    <div className=\"flex items-center mt-1\">\r\n                      <span className=\"relative flex h-3 w-3 mr-1\">\r\n                        <span className=\"animate-ping absolute inline-flex h-2 w-2 rounded-full bg-[#1fff20] opacity-75\"></span>\r\n                        <span className=\"relative inline-flex rounded-full h-2 w-2 bg-[#1fff20]\"></span>\r\n                      </span>\r\n                      <p>{exclusives?.gameRating}</p>\r\n                    </div>\r\n                  </div>\r\n                </SwiperSlide>\r\n              ) : null\r\n            )}\r\n          </Swiper>\r\n        ) : (\r\n          <div className=\"grid grid-cols-3 md:grid-cols-6 gap-x-2 md:gap-x-4 gap-y-5 px-2 md:px-0\">\r\n            {allGames?.games?.map((exclusives, index) =>\r\n              exclusives?.gameType === \"StackExclusives\" ? (\r\n                <div key={index}>\r\n                  <div className=\"text-center\">\r\n                    <img\r\n                      src={exclusives.gameImage}\r\n                      className=\"xl:w-44 lg:w-36 lg:h-48 xl:h-56 rounded-md hover:cursor-pointer transition-transform duration-300 hover:translate-y-[-10px]\"\r\n                      alt={exclusives?.gameName || \"Game Image\"} // Improved accessibility\r\n                      onClick={() => handleAllGame(exclusives?.gameName, exclusives?.id)}\r\n                    />\r\n                    <div className=\"flex items-center mt-1\">\r\n                      <span className=\"relative flex h-3 w-3 mr-1\">\r\n                        <span className=\"animate-ping absolute inline-flex h-2 w-2 rounded-full bg-[#1fff20] opacity-75\"></span>\r\n                        <span className=\"relative inline-flex rounded-full h-2 w-2 bg-[#1fff20]\"></span>\r\n                      </span>\r\n                      <p>{exclusives?.gameRating}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : null\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Exclusives;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { FaGift } from \"react-icons/fa6\";\r\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { Box, Divider } from \"@mui/material\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Navigation } from \"swiper/modules\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\n\r\nfunction GameShows({ allGames, isLobby }) {\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const swiperRef = useRef(null);\r\n  const navButtonsRef = useRef(null);\r\n\r\n  const handleAllGame = (gameName, id) => {\r\n    setLoading(true);\r\n    navigate(`/casino/${gameName}/${id}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (swiperRef.current && swiperRef.current.swiper) {\r\n      const prevButton = navButtonsRef.current.querySelector(\".prev-arrow\");\r\n      const nextButton = navButtonsRef.current.querySelector(\".next-arrow\");\r\n      swiperRef.current.swiper.params.navigation.prevEl = prevButton;\r\n      swiperRef.current.swiper.params.navigation.nextEl = nextButton;\r\n      swiperRef.current.swiper.navigation.init();\r\n      swiperRef.current.swiper.navigation.update();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-between items-center\">\r\n        <div className=\"flex items-center mx-3 mt-8 space-x-2\">\r\n          <FaGift\r\n            fontSize=\"small\"\r\n            className=\"text-[#b1bad3] hover:text-white\"\r\n          />\r\n          <Link className=\"text-lg font-medium\">Game Shows</Link>\r\n        </div>\r\n        {isLobby && (\r\n          <div ref={navButtonsRef}>\r\n            <Box\r\n              sx={{\r\n                display: \"inline-flex\",\r\n                alignItems: \"center\",\r\n                border: \"1px solid\",\r\n                borderColor: \"#b1bad3\",\r\n                borderRadius: 2,\r\n                bgcolor: \"#1a2c38\",\r\n                color: \"#b1bad3\",\r\n                \"& svg\": {\r\n                  m: 1,\r\n                },\r\n              }}\r\n            >\r\n              <ArrowBackIosIcon\r\n                fontSize=\"small\"\r\n                className=\"cursor-pointer prev-arrow\"\r\n              />\r\n              <Divider\r\n                orientation=\"vertical\"\r\n                variant=\"middle\"\r\n                flexItem\r\n                sx={{ borderColor: \"#b1bad3\" }}\r\n              />\r\n              <ArrowForwardIosIcon\r\n                fontSize=\"small\"\r\n                className=\"cursor-pointer next-arrow\"\r\n              />\r\n            </Box>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\" ml-2 mr-2  relative mt-3\">\r\n        {isLobby ? (\r\n          <Swiper\r\n            slidesPerView={6}\r\n            slidesPerGroup={6}\r\n            navigation\r\n            modules={[Navigation]}\r\n            ref={swiperRef}\r\n            spaceBetween={15}  \r\n            breakpoints={{\r\n              320: {\r\n                slidesPerView: 3,\r\n                slidesPerGroup: 3,\r\n              },\r\n              375: {\r\n                slidesPerView: 3,\r\n                slidesPerGroup: 3,\r\n              },\r\n              425: {\r\n                slidesPerView: 3,\r\n                slidesPerGroup: 3,\r\n              },\r\n              640: {\r\n                slidesPerView: 2,\r\n                slidesPerGroup: 2,\r\n              },\r\n              768: {\r\n                slidesPerView: 4,\r\n                slidesPerGroup: 4,\r\n              },\r\n              1024: {\r\n                slidesPerView: 6,\r\n                slidesPerGroup: 6,\r\n              },\r\n            }}\r\n          >\r\n            {allGames?.games?.map((gameShows, index) =>\r\n              gameShows?.gameType === \"GameShows\" ? (\r\n                <SwiperSlide key={index}>\r\n                  <div className=\"text-center\">\r\n                    <img\r\n                      src={gameShows.gameImage}\r\n                      className=\"xl:w-44 lg:w-36 lg:h-48 xl:h-56 rounded-md hover:cursor-pointer transition-transform duration-300 hover:translate-y-[-10px]\"\r\n                      alt=\"Not Found\"\r\n                      onClick={() => handleAllGame(gameShows?.gameName, gameShows?.id)}\r\n                    />\r\n                    <div className=\"flex items-center mt-1\">\r\n                      <span className=\"relative flex h-3 w-3 mr-1\">\r\n                        <span className=\"animate-ping absolute inline-flex h-2 w-2 rounded-full bg-[#1fff20] opacity-75\"></span>\r\n                        <span className=\"relative inline-flex rounded-full h-2 w-2 bg-[#1fff20]\"></span>\r\n                      </span>\r\n                      <p>{gameShows?.gameRating}</p>\r\n                    </div>\r\n                  </div>\r\n                </SwiperSlide>\r\n              ) : null\r\n            )}\r\n          </Swiper>\r\n        ) : (\r\n          <div className=\"grid grid-cols-3 md:grid-cols-6 gap-x-2 md:gap-x-4 gap-y-5 px-2 md:px-0\">\r\n            {allGames?.games?.map((gameShows, index) =>\r\n              gameShows?.gameType === \"GameShows\" ? (\r\n                <div key={index}>\r\n                  <div className=\"text-center\">\r\n                    <img\r\n                      src={gameShows.gameImage}\r\n                      className=\"xl:w-44 lg:w-36 lg:h-48 xl:h-56 rounded-md hover:cursor-pointer transition-transform duration-300 hover:translate-y-[-10px]\"\r\n                      alt=\"Not Found\"\r\n                      onClick={() => handleAllGame(gameShows?.gameName, gameShows?.id)}\r\n                    />\r\n                    <div className=\"flex items-center mt-1\">\r\n                      <span className=\"relative flex h-3 w-3 mr-1\">\r\n                        <span className=\"animate-ping absolute inline-flex h-2 w-2 rounded-full bg-[#1fff20] opacity-75\"></span>\r\n                        <span className=\"relative inline-flex rounded-full h-2 w-2 bg-[#1fff20]\"></span>\r\n                      </span>\r\n                      <p>{gameShows?.gameRating}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : null\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameShows;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport InboxIcon from \"@mui/icons-material/Inbox\";\r\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { Box, Divider } from \"@mui/material\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Navigation } from \"swiper/modules\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\n\r\nfunction LiveCasino({ allGames, isLobby }) {\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const swiperRef = useRef(null);\r\n  const navButtonsRef = useRef(null);\r\n\r\n  const handleAllGame = (gameName, id) => {\r\n    setLoading(true);\r\n    navigate(`/casino/${gameName}/${id}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (swiperRef.current && swiperRef.current.swiper) {\r\n      const prevButton = navButtonsRef.current.querySelector(\".prev-arrow\");\r\n      const nextButton = navButtonsRef.current.querySelector(\".next-arrow\");\r\n      swiperRef.current.swiper.params.navigation.prevEl = prevButton;\r\n      swiperRef.current.swiper.params.navigation.nextEl = nextButton;\r\n      swiperRef.current.swiper.navigation.init();\r\n      swiperRef.current.swiper.navigation.update();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-between items-center\">\r\n        <div className=\"flex items-center mx-3 mt-8 space-x-2\">\r\n          <InboxIcon\r\n            fontSize=\"small\"\r\n            className=\"text-[#b1bad3] hover:text-white\"\r\n          />\r\n          <Link className=\"text-lg font-medium\">Live Casino</Link>\r\n        </div>\r\n        {isLobby && (\r\n          <div ref={navButtonsRef}>\r\n            <Box\r\n              sx={{\r\n                display: \"inline-flex\",\r\n                alignItems: \"center\",\r\n                border: \"1px solid\",\r\n                borderColor: \"#b1bad3\",\r\n                borderRadius: 2,\r\n                bgcolor: \"#1a2c38\",\r\n                color: \"#b1bad3\",\r\n                \"& svg\": {\r\n                  m: 1,\r\n                },\r\n              }}\r\n            >\r\n              <ArrowBackIosIcon\r\n                fontSize=\"small\"\r\n                className=\"cursor-pointer prev-arrow\"\r\n              />\r\n              <Divider\r\n                orientation=\"vertical\"\r\n                variant=\"middle\"\r\n                flexItem\r\n                sx={{ borderColor: \"#b1bad3\" }}\r\n              />\r\n              <ArrowForwardIosIcon\r\n                fontSize=\"small\"\r\n                className=\"cursor-pointer next-arrow\"\r\n              />\r\n            </Box>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\" ml-2 mr-2 relative mt-3\">\r\n        {isLobby ? (\r\n          <Swiper\r\n            slidesPerView={6}\r\n            slidesPerGroup={6}\r\n            navigation\r\n            modules={[Navigation]}\r\n            ref={swiperRef}\r\n            spaceBetween={15}  \r\n            breakpoints={{\r\n              320: {\r\n                slidesPerView: 3,\r\n                slidesPerGroup: 3,\r\n              },\r\n              375: {\r\n                slidesPerView: 3,\r\n                slidesPerGroup: 3,\r\n              },\r\n              425: {\r\n                slidesPerView: 3,\r\n                slidesPerGroup: 3,\r\n              },\r\n              640: {\r\n                slidesPerView: 2,\r\n                slidesPerGroup: 2,\r\n              },\r\n              768: {\r\n                slidesPerView: 4,\r\n                slidesPerGroup: 4,\r\n              },\r\n              1024: {\r\n                slidesPerView: 6,\r\n                slidesPerGroup: 6,\r\n              },\r\n            }}\r\n          >\r\n            {allGames?.games?.map((liveCasino, index) =>\r\n              liveCasino?.gameType === \"LiveCasino\" ? (\r\n                <SwiperSlide key={index}>\r\n                  <div className=\"text-center\">\r\n                    <img\r\n                      src={liveCasino.gameImage}\r\n                      className=\"xl:w-44 lg:w-36 lg:h-48 xl:h-56 rounded-md hover:cursor-pointer transition-transform duration-300 hover:translate-y-[-10px]\"\r\n                      alt=\"Not Found\"\r\n                      onClick={() => handleAllGame(liveCasino?.gameName, liveCasino?.id)}\r\n                    />\r\n                    <div className=\"flex items-center mt-1\">\r\n                      <span className=\"relative flex h-3 w-3 mr-1\">\r\n                        <span className=\"animate-ping absolute inline-flex h-2 w-2 rounded-full bg-[#1fff20] opacity-75\"></span>\r\n                        <span className=\"relative inline-flex rounded-full h-2 w-2 bg-[#1fff20]\"></span>\r\n                      </span>\r\n                      <p>{liveCasino?.gameRating}</p>\r\n                    </div>\r\n                  </div>\r\n                </SwiperSlide>\r\n              ) : null\r\n            )}\r\n          </Swiper>\r\n        ) : (\r\n          <div className=\"grid grid-cols-3 md:grid-cols-6 gap-x-2 md:gap-x-4 gap-y-5 px-2 md:px-0\">\r\n            {allGames?.games?.map((liveCasino, index) =>\r\n              liveCasino?.gameType === \"LiveCasino\" ? (\r\n                <div key={index}>\r\n                  <div className=\"text-center\">\r\n                    <img\r\n                      src={liveCasino.gameImage}\r\n                      className=\"xl:w-44 lg:w-36 lg:h-48 xl:h-56 rounded-md hover:cursor-pointer transition-transform duration-300 hover:translate-y-[-10px]\"\r\n                      alt=\"Not Found\"\r\n                      onClick={() => handleAllGame(liveCasino?.gameName, liveCasino?.id)}\r\n                    />\r\n                    <div className=\"flex items-center mt-1\">\r\n                      <span className=\"relative flex h-3 w-3 mr-1\">\r\n                        <span className=\"animate-ping absolute inline-flex h-2 w-2 rounded-full bg-[#1fff20] opacity-75\"></span>\r\n                        <span className=\"relative inline-flex rounded-full h-2 w-2 bg-[#1fff20]\"></span>\r\n                      </span>\r\n                      <p>{liveCasino?.gameRating}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : null\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LiveCasino;","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Filter7Icon from \"@mui/icons-material/Filter7\";\r\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { Box, Divider } from \"@mui/material\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport { Navigation } from \"swiper/modules\";\r\n\r\nfunction Slots({ allGames, isLobby }) {\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const swiperRef = useRef(null);\r\n  const navButtonsRef = useRef(null);\r\n\r\n  const handleAllGame = (gameName, id) => {\r\n    setLoading(true);\r\n    navigate(`/casino/${gameName}/${id}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (swiperRef.current && swiperRef.current.swiper) {\r\n      const prevButton = navButtonsRef.current.querySelector(\".prev-arrow\");\r\n      const nextButton = navButtonsRef.current.querySelector(\".next-arrow\");\r\n      swiperRef.current.swiper.params.navigation.prevEl = prevButton;\r\n      swiperRef.current.swiper.params.navigation.nextEl = nextButton;\r\n      swiperRef.current.swiper.navigation.init();\r\n      swiperRef.current.swiper.navigation.update();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-between items-center\">\r\n        <div className=\"flex items-center mx-3 mt-8 space-x-2\">\r\n          <Filter7Icon\r\n            fontSize=\"small\"\r\n            className=\"text-[#b1bad3] hover:text-white\"\r\n          />\r\n          <Link className=\"text-lg font-medium\">Slots</Link>\r\n        </div>\r\n        {isLobby && (\r\n          <div ref={navButtonsRef}>\r\n            <Box\r\n              sx={{\r\n                display: \"inline-flex\",\r\n                alignItems: \"center\",\r\n                border: \"1px solid\",\r\n                borderColor: \"#b1bad3\",\r\n                borderRadius: 2,\r\n                bgcolor: \"#1a2c38\",\r\n                color: \"#b1bad3\",\r\n                \"& svg\": {\r\n                  m: 1,\r\n                },\r\n              }}\r\n            >\r\n              <ArrowBackIosIcon\r\n                fontSize=\"small\"\r\n                className=\"cursor-pointer prev-arrow\"\r\n              />\r\n              <Divider\r\n                orientation=\"vertical\"\r\n                variant=\"middle\"\r\n                flexItem\r\n                sx={{ borderColor: \"#b1bad3\" }}\r\n              />\r\n              <ArrowForwardIosIcon\r\n                fontSize=\"small\"\r\n                className=\"cursor-pointer next-arrow\"\r\n              />\r\n            </Box>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\" ml-2 mr-2  relative mt-3\">\r\n        {isLobby ? (\r\n          <Swiper\r\n            slidesPerView={6}\r\n            slidesPerGroup={6}\r\n            navigation\r\n            modules={[Navigation]}\r\n            ref={swiperRef}\r\n            spaceBetween={15}  \r\n            breakpoints={{\r\n              320: {\r\n                slidesPerView: 3,\r\n                slidesPerGroup: 3,\r\n              },\r\n              375: {\r\n                slidesPerView: 3,\r\n                slidesPerGroup: 3,\r\n              },\r\n              425: {\r\n                slidesPerView: 3,\r\n                slidesPerGroup: 3,\r\n              },\r\n              640: {\r\n                slidesPerView: 2,\r\n                slidesPerGroup: 2,\r\n              },\r\n              768: {\r\n                slidesPerView: 4,\r\n                slidesPerGroup: 4,\r\n              },\r\n              1024: {\r\n                slidesPerView: 6,\r\n                slidesPerGroup: 6,\r\n              },\r\n            }}\r\n          >\r\n            {allGames?.games?.map((slots, index) =>\r\n              slots?.gameType === \"Slots\" ? (\r\n                <SwiperSlide key={index}>\r\n                  <div className=\"text-center\">\r\n                    <img\r\n                      src={slots.gameImage}\r\n                      className=\"xl:w-44 lg:w-36 lg:h-48 xl:h-56 rounded-md hover:cursor-pointer transition-transform duration-300 hover:translate-y-[-10px]\"\r\n                      alt=\"Not Found\"\r\n                      onClick={() => handleAllGame(slots?.gameName, slots?.id)}\r\n                    />\r\n                    <div className=\"flex items-center mt-1\">\r\n                      <span className=\"relative flex h-3 w-3 mr-1\">\r\n                        <span className=\"animate-ping absolute inline-flex h-2 w-2 rounded-full bg-[#1fff20] opacity-75\"></span>\r\n                        <span className=\"relative inline-flex rounded-full h-2 w-2 bg-[#1fff20]\"></span>\r\n                      </span>\r\n                      <p>{slots?.gameRating}</p>\r\n                    </div>\r\n                  </div>\r\n                </SwiperSlide>\r\n              ) : null\r\n            )}\r\n          </Swiper>\r\n        ) : (\r\n          <div className=\"grid grid-cols-3 md:grid-cols-6 gap-x-2 md:gap-x-4 gap-y-5 px-2 md:px-0\">\r\n            {allGames?.games?.map((slots, index) =>\r\n              slots?.gameType === \"Slots\" ? (\r\n                <div key={index}>\r\n                  <div className=\"text-center\">\r\n                    <img\r\n                      src={slots.gameImage}\r\n                      className=\"xl:w-44 lg:w-36 lg:h-48 xl:h-56 rounded-md hover:cursor-pointer transition-transform duration-300 hover:translate-y-[-10px]\"\r\n                      alt=\"Not Found\"\r\n                      onClick={() => handleAllGame(slots?.gameName, slots?.id)}\r\n                    />\r\n                    <div className=\"flex items-center mt-1\">\r\n                      <span className=\"relative flex h-3 w-3 mr-1\">\r\n                        <span className=\"animate-ping absolute inline-flex h-2 w-2 rounded-full bg-[#1fff20] opacity-75\"></span>\r\n                        <span className=\"relative inline-flex rounded-full h-2 w-2 bg-[#1fff20]\"></span>\r\n                      </span>\r\n                      <p>{slots?.gameRating}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : null\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Slots;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { BsFire } from \"react-icons/bs\";\r\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { Box, Divider } from \"@mui/material\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Navigation } from \"swiper/modules\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport { decodedToken } from \"../../../resources/utility\";\r\nimport {\r\n  CrashSocket,\r\n  DragonTowerSocket,\r\n  LimboSocket,\r\n  MineSocket,\r\n  PlinkoSocket,\r\n  WheelSocket,\r\n} from \"../../../socket\";\r\n\r\nfunction StackOriginals({ allGames, isLobby }) {\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const swiperRef = useRef(null);\r\n  const navButtonsRef = useRef(null);\r\n  const decoded = decodedToken();\r\n\r\n  const handleAllGame = (gameName, id) => {\r\n    setLoading(true);\r\n    navigate(`/casino/${gameName}/${id}`);\r\n    switch (gameName) {\r\n      case \"Crash\":\r\n        return CrashSocket.emit(\"joinGame\", {\r\n          userId: decoded?.userId,\r\n          gameId: id,\r\n        });\r\n      case \"Plinko\":\r\n        return PlinkoSocket.emit(\"joinGame\", {\r\n          userId: decoded?.userId,\r\n          gameId: id,\r\n        });\r\n      case \"Mines\":\r\n        return MineSocket.emit(\"joinGame\", {\r\n          userId: decoded?.userId,\r\n          gameId: id,\r\n        });\r\n      case \"DragonTower\":\r\n        return DragonTowerSocket.emit(\"joinGame\", {\r\n          userId: decoded?.userId,\r\n          gameId: id,\r\n        });\r\n      case \"Limbo\":\r\n        return LimboSocket.emit(\"joinGame\", {\r\n          userId: decoded?.userId,\r\n          gameId: id,\r\n        });\r\n      case \"Wheel\":\r\n        return WheelSocket.emit(\"joinGame\", {\r\n          userId: decoded?.userId,\r\n          gameId: id,\r\n        });\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (swiperRef.current && swiperRef.current.swiper) {\r\n      const prevButton = navButtonsRef.current.querySelector(\".prev-arrow\");\r\n      const nextButton = navButtonsRef.current.querySelector(\".next-arrow\");\r\n      swiperRef.current.swiper.params.navigation.prevEl = prevButton;\r\n      swiperRef.current.swiper.params.navigation.nextEl = nextButton;\r\n      swiperRef.current.swiper.navigation.init();\r\n      swiperRef.current.swiper.navigation.update();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-between items-center\">\r\n        <div className=\"flex items-center mx-3 mt-8 space-x-2\">\r\n          <BsFire fontSize={20} className=\"text-[#b1bad3] hover:text-white\" />\r\n          <Link className=\"text-lg font-medium\">Listor Originals</Link>\r\n        </div>\r\n        {isLobby && (\r\n          <div ref={navButtonsRef}>\r\n            <Box\r\n              sx={{\r\n                display: \"inline-flex\",\r\n                alignItems: \"center\",\r\n                border: \"1px solid\",\r\n                borderColor: \"#b1bad3\",\r\n                borderRadius: 2,\r\n                bgcolor: \"#1a2c38\",\r\n                color: \"#b1bad3\",\r\n                \"& svg\": {\r\n                  m: 1,\r\n                },\r\n              }}\r\n            >\r\n              <ArrowBackIosIcon\r\n                fontSize=\"small\"\r\n                className=\"cursor-pointer prev-arrow\"\r\n              />\r\n              <Divider\r\n                orientation=\"vertical\"\r\n                variant=\"middle\"\r\n                flexItem\r\n                sx={{ borderColor: \"#b1bad3\" }}\r\n              />\r\n              <ArrowForwardIosIcon\r\n                fontSize=\"small\"\r\n                className=\"cursor-pointer next-arrow\"\r\n              />\r\n            </Box>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\" ml-2 mr-2 relative mt-3\">\r\n        {isLobby ? (\r\n          <Swiper\r\n            slidesPerView={6}\r\n            slidesPerGroup={6}\r\n            navigation\r\n            modules={[Navigation]}\r\n            ref={swiperRef}\r\n            spaceBetween={15}\r\n            breakpoints={{\r\n              320: {\r\n                slidesPerView: 3,\r\n                slidesPerGroup: 3,\r\n              },\r\n              375: {\r\n                slidesPerView: 3,\r\n                slidesPerGroup: 3,\r\n              },\r\n              425: {\r\n                slidesPerView: 3,\r\n                slidesPerGroup: 3,\r\n              },\r\n              640: {\r\n                slidesPerView: 2,\r\n                slidesPerGroup: 2,\r\n              },\r\n              768: {\r\n                slidesPerView: 4,\r\n                slidesPerGroup: 4,\r\n              },\r\n              1024: {\r\n                slidesPerView: 6,\r\n                slidesPerGroup: 6,\r\n              },\r\n            }}\r\n          >\r\n            {allGames?.games?.map((gameData, index) =>\r\n              gameData?.gameType === \"casino\" ||\r\n              gameData?.gameType === \"Casino\" ? (\r\n                <SwiperSlide key={index}>\r\n                  <div className=\"text-center\">\r\n                    <img\r\n                      src={gameData.gameImage}\r\n                      className=\"xl:w-44 lg:w-36 lg:h-48 xl:h-56 rounded-md hover:cursor-pointer transition-transform duration-300 hover:translate-y-[-10px]\"\r\n                      alt=\"Not Found\"\r\n                      onClick={() =>\r\n                        handleAllGame(gameData?.gameName, gameData?.id)\r\n                      }\r\n                    />\r\n                    <div className=\"flex items-center mt-1\">\r\n                      <span className=\"relative flex h-3 w-3 mr-1\">\r\n                        <span className=\"animate-ping absolute inline-flex h-2 w-2 rounded-full bg-[#1fff20] opacity-75\"></span>\r\n                        <span className=\"relative inline-flex rounded-full h-2 w-2 bg-[#1fff20]\"></span>\r\n                      </span>\r\n                      <p>{gameData?.gameRating}</p>\r\n                    </div>\r\n                  </div>\r\n                </SwiperSlide>\r\n              ) : null\r\n            )}\r\n          </Swiper>\r\n        ) : (\r\n          <div className=\"grid grid-cols-3 md:grid-cols-6 gap-x-2 md:gap-x-4 gap-y-5 px-2 md:px-0\">\r\n            {allGames?.games?.map((gameData, index) =>\r\n              gameData?.gameType === \"casino\" ||\r\n              gameData?.gameType === \"Casino\" ? (\r\n                <div key={index}>\r\n                  <div className=\"text-center\">\r\n                    <img\r\n                      src={gameData.gameImage}\r\n                      className=\"xl:w-44 lg:w-36 lg:h-48 xl:h-56 rounded-md hover:cursor-pointer transition-transform duration-300 hover:translate-y-[-10px]\"\r\n                      alt=\"Not Found\"\r\n                      onClick={() =>\r\n                        handleAllGame(gameData?.gameName, gameData?.id)\r\n                      }\r\n                    />\r\n                    <div className=\"flex items-center mt-1\">\r\n                      <span className=\"relative flex h-3 w-3 mr-1\">\r\n                        <span className=\"animate-ping absolute inline-flex h-2 w-2 rounded-full bg-[#1fff20] opacity-75\"></span>\r\n                        <span className=\"relative inline-flex rounded-full h-2 w-2 bg-[#1fff20]\"></span>\r\n                      </span>\r\n                      <p>{gameData?.gameRating}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : null\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StackOriginals;\r\n"],"names":["async","getAllGames","axios","get","headers","Authorization","localStorage","getItem","data","error","token","CrashSocket","io","process","path","extraHeaders","PlinkoSocket","MineSocket","WheelSocket","LimboSocket","DragonTowerSocket","_ref","_allGames$games","_allGames$games2","allGames","isLobby","loading","setLoading","useState","navigate","useNavigate","swiperRef","useRef","navButtonsRef","handleAllGame","gameName","id","useEffect","current","swiper","prevButton","querySelector","nextButton","params","navigation","prevEl","nextEl","init","update","_jsxs","children","className","_jsx","BsBookmarkStarFill","fontSize","Link","ref","Box","sx","display","alignItems","border","borderColor","borderRadius","bgcolor","color","m","ArrowBackIosIcon","Divider","orientation","variant","flexItem","ArrowForwardIosIcon","Swiper","slidesPerView","slidesPerGroup","modules","Navigation","spaceBetween","breakpoints","games","map","exclusives","index","gameType","SwiperSlide","src","gameImage","alt","onClick","gameRating","FaGift","gameShows","InboxIcon","liveCasino","Filter7Icon","slots","decoded","decodedToken","emit","userId","gameId","BsFire","gameData"],"sourceRoot":""}